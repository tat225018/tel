from telebot import types
import pickle
import os


# -----------------------------------------------------------------------
class Users:
    activeUsers = {}

    def __init__(self, chat_id, user_json):
        self.id = user_json.get("id", "")
        self.isBot = user_json.get("is_bot", "")
        self.firstName = user_json.get("first_name", "")
        self.userName = user_json.get("username", "")
        self.languageCode = user_json.get("language_code", "")
        self.__class__.activeUsers[chat_id] = self

    def __str__(self):
        return f"Name user: {self.firstName}   id: {self.userName}   lang: {self.languageCode}"

    def getUserHTML(self):
        return f"Name user: {self.firstName}   id: <a href='https://t.me/{self.userName}'>{self.userName}</a>   lang: {self.languageCode}"

    @classmethod
    def getUser(cls, chat_id):
        return cls.activeUsers.get(chat_id)

# -----------------------------------------------------------------------
class KeyboardMenu:
    def __init__(self, name, handler=None):
        self.name = name
        self.handler = handler

# -----------------------------------------------------------------------
class Menu:
    hash = {}  # —Ç—É—Ç –±—É–¥–µ–º –Ω–∞–∫–∞–ø–ª–∏–≤–∞—Ç—å –≤—Å–µ —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —ç–∫–∑–µ–º–ø–ª—è—Ä—ã –∫–ª–∞—Å—Å–∞
    cur_menu = {}  # —Ç—É—Ç –±—É–¥–µ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è —Ç–µ–∫—É—â–∏–π —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞, —Ç–µ–∫—É—â–µ–µ –º–µ–Ω—é –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    extendedParameters = {}  # —ç—Ç–æ –º–µ—Å—Ç–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –≤ inline –∫–Ω–æ–ø–∫–∏
    namePickleFile = "bot_curMenu.plk"

    # –ü–ï–†–ï–ü–ò–°–ê–¢–¨ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã—Ö –∫ chat_id –∏ –Ω–∞–∑–≤–∞–Ω–∏—é –∫–Ω–æ–ø–∫–∏
    def __init__(self, name, buttons=None, parent=None, module=""):
        self.parent = parent
        self.module = module
        self.name = name
        self.buttons = buttons
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=4)
        markup.add(*buttons)  # –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ - –∑–≤—ë–∑–¥–æ—á–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ä–∞—Å–ø–∞–∫–æ–≤–∫–∏ —Å–ø–∏—Å–∫–∞
        self.markup = markup
        self.__class__.hash[name] = self  # –≤ –∫–ª–∞—Å—Å–µ —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è —Å–ª–æ–≤–∞—Ä—å, —Å–æ –≤—Å–µ–º–∏ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞–º–∏ –∫–ª–∞—Å—Å–∞, –æ–±–Ω–æ–≤–∏–º –µ–≥–æ

    @classmethod
    def getExtPar(cls, id):
        return cls.extendedParameters.get(id, None)

    @classmethod
    def setExtPar(cls, parameter):
        import uuid
        id = uuid.uuid4().hex
        cls.extendedParameters[id] = parameter
        return id

    @classmethod
    def getMenu(cls, chat_id, name):
        menu = cls.hash.get(name)
        if menu is not None:
            cls.cur_menu[chat_id] = menu
            cls.saveCurMenu()
        return menu

    @classmethod
    def getCurMenu(cls, chat_id):
        return cls.cur_menu.get(chat_id)

    @classmethod
    def loadCurMenu(cls):
        if os.path.exists(cls.namePickleFile):
            with open(cls.namePickleFile, 'rb') as pickle_in:
                cls.cur_menu = pickle.load(pickle_in)
        else:
            cls.cur_menu = {}

    @classmethod
    def saveCurMenu(cls):
        with open(cls.namePickleFile, 'wb') as pickle_out:
            pickle.dump(cls.cur_menu, pickle_out)


# -----------------------------------------------------------------------
def goto_menu(bot, chat_id, name_menu):
    # –ø–æ–ª—É—á–µ–Ω–∏–µ –Ω—É–∂–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –º–µ–Ω—é
    cur_menu = Menu.getCurMenu(chat_id)
    if name_menu == "–í—ã—Ö–æ–¥" and cur_menu != None and cur_menu.parent != None:
        target_menu = Menu.getMenu(chat_id, cur_menu.parent.name)
    else:
        target_menu = Menu.getMenu(chat_id, name_menu)

    if target_menu != None:
        bot.send_message(chat_id, text=target_menu.name, reply_markup=target_menu.markup)
        return target_menu
    else:
        return None


# -----------------------------------------------------------------------
m_main = Menu("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", buttons=["–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è", "–ò–≥—Ä—ã", "–î–ó", "–ü–µ—Ä–µ–≤–µ—Å—Ç–∏", "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏"])
m_games = Menu("–ò–≥—Ä—ã", buttons=["–ò–≥—Ä–∞ –ö–ù–ë", "–ò–≥—Ä–∞ –≤ 21", "–í—ã—Ö–æ–¥"], module="botGames", parent=m_main)
m_game_21 = Menu("–ò–≥—Ä–∞ –≤ 21", buttons=["–ö–∞—Ä—Ç—É!", "–°—Ç–æ–ø!", "–í—ã—Ö–æ–¥"], parent=m_games, module="botGames")
m_game_rsp = Menu("–ò–≥—Ä–∞ –ö–ù–ë", buttons=["–ö–∞–º–µ–Ω—å", "–ù–æ–∂–Ω–∏—Ü—ã", "–ë—É–º–∞–≥–∞", "–í—ã—Ö–æ–¥"], parent=m_games, module="botGames")
m_DZ = Menu("–î–ó", buttons=["‚Ññ1", "‚Ññ2", "‚Ññ3", "‚Ññ4", "‚Ññ5", "‚Ññ6", "–í—ã—Ö–æ–¥"], parent=m_main, module="DZ")
m_fun = Menu("–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è", buttons=["–ü—Ä–∏—à–ª–∏ —Å–æ–±–∞—á–∫—É üê∂", "–ü—Ä–∏—à–ª–∏ –∫–æ—Ç–∏–∫–∞ ^^ meow", "–ü—Ä–∏—Å–ª–∞—Ç—å –ª–∏—Å—É", "–ü—Ä–∏—Å–ª–∞—Ç—å –∞–Ω–µ–∫–¥–æ—Ç", "–ü—Ä–∏—Å–ª–∞—Ç—å —Ñ–∏–ª—å–º", "–í—ã—Ö–æ–¥"], parent=m_main, module="fun")
m_conversion = Menu("–ü–µ—Ä–µ–≤–µ—Å—Ç–∏", buttons=["–ü–µ—Ä–µ–≤–æ–¥—á–∏–∫", "–ö–æ–Ω–≤–µ—Ä—Ç–µ—Ä"], parent=m_main, module="conversion")

Menu.loadCurMenu()

# import main
# import DZ
#
# b_exit = KeyboardMenu("–í—ã—Ö–æ–¥")
#
# b_fun = KeyboardMenu("–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è")
# b_game = KeyboardMenu("–ò–≥—Ä—ã")
# b_dz = KeyboardMenu("–î–ó")
# b_help = KeyboardMenu("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏", main.send_help)
# m_main = Menu("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", buttons=[b_fun, b_game, b_dz, b_help])
#
# b_dz1 = KeyboardMenu("‚Ññ1", DZ.dz1)
# b_dz2 = KeyboardMenu("‚Ññ2", DZ.dz2)
# b_dz3 = KeyboardMenu("‚Ññ3", DZ.dz3)
# b_dz4 = KeyboardMenu("‚Ññ4", DZ.dz4)
# b_dz5 = KeyboardMenu("‚Ññ5", DZ.dz5)
# b_dz6 = KeyboardMenu("‚Ññ6", DZ.dz6)
#
# m_DZ = Menu(b_dz, buttons=[b_dz1, b_dz2, b_dz3, b_dz4, b_dz5, b_dz6, b_exit], parent=m_main)
#
# menu_json = {
#     "name": "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
#     "handler": "",
#     "buttons": [
#         {
#             "name": "–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è",
#             "handler": "",
#         },
#         {
#             "name": "–ò–≥—Ä—ã",
#             "handler": "",
#         },
#         {
#             "name": "–î–ó",
#             "handler": "",
#         },
#         {
#             "name": "–ü–æ–º–æ—â—å",
#             "handler": "main.send_help",
#         }
#     ]
# }

# –≤—Ç–æ—Ä–æ–π –≤–∞—Ä–∏–∞–Ω—Ç - –º–µ–Ω—é —á–µ—Ä–µ–∑ ini-—Ñ–∞–π–ª