# ======================================= –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è
import requests
import bs4
from telebot import types
from io import BytesIO


# -----------------------------------------------------------------------
def get_text_messages(bot, cur_user, message):
    chat_id = message.chat.id
    ms_text = message.text

    if ms_text == "–ü—Ä–∏—à–ª–∏ —Å–æ–±–∞—á–∫—É üê∂":
        bot.send_photo(chat_id, photo=get_dogURL(), caption="–¥–µ—Ä–∂–∏ —Å–æ–±–∞—á–∫—É *–≥–∞—Ñ*")

    elif ms_text == "–ü—Ä–∏—à–ª–∏ –∫–æ—Ç–∏–∫–∞ ^^ meow":
        bot.send_photo(chat_id, photo=get_cat(), caption="meow~!")

    elif ms_text == "–ü—Ä–∏—Å–ª–∞—Ç—å –ª–∏—Å—É":
        bot.send_photo(chat_id, photo=get_foxURL(), caption="–ª–∏—Å–∏—á–∫–∞ ü¶äüçó")

    elif ms_text == "–ü—Ä–∏—Å–ª–∞—Ç—å –∞–Ω–µ–∫–¥–æ—Ç":
        bot.send_message(chat_id, text=get_anekdot())

    elif ms_text == "–ü—Ä–∏—Å–ª–∞—Ç—å —Ñ–∏–ª—å–º":
        send_film(bot, chat_id)


# -----------------------------------------------------------------------
def send_film(bot, chat_id):
    film = get_randomFilm()
    info_str = f"<b>{film['–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ']}</b>\n" \
               f"–ì–æ–¥: {film['–ì–æ–¥']}\n" \
               f"–°—Ç—Ä–∞–Ω–∞: {film['–°—Ç—Ä–∞–Ω–∞']}\n" \
               f"–ñ–∞–Ω—Ä: {film['–ñ–∞–Ω—Ä']}\n" \
               f"–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {film['–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å']}"
    markup = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton(text="–¢—Ä–µ–π–ª–µ—Ä", url=film["–¢—Ä–µ–π–ª–µ—Ä_url"])
    btn2 = types.InlineKeyboardButton(text="–°–ú–û–¢–†–ï–¢–¨ –æ–Ω–ª–∞–π–Ω", url=film["—Ñ–∏–ª—å–º_url"])
    markup.add(btn1, btn2)
    bot.send_photo(chat_id, photo=film['–û–±–ª–æ–∂–∫–∞_url'], caption=info_str, parse_mode='HTML', reply_markup=markup)


# -----------------------------------------------------------------------
def get_anekdot():
    array_anekdots = []
    req_anek = requests.get('http://anekdotme.ru/random')
    if req_anek.status_code == 200:
        soup = bs4.BeautifulSoup(req_anek.text, "html.parser")
        result_find = soup.select('.anekdot_text')
        for result in result_find:
            array_anekdots.append(result.getText().strip())
    if len(array_anekdots) > 0:
        return array_anekdots[0]
    else:
        return ""


# -----------------------------------------------------------------------
def get_news():
    array_anekdots = []
    req_anek = requests.get('https://www.banki.ru/news/lenta')
    if req_anek.status_code == 200:
        soup = bs4.BeautifulSoup(req_anek.text, "html.parser")
        result_find = soup.select('.doFpcq')
        for result in result_find:
            print(result)

            # array_anekdots.append(result.getText().strip())
    if len(array_anekdots) > 0:
        return array_anekdots[0]
    else:
        return ""


# -----------------------------------------------------------------------
def get_foxURL():
    url = ""
    req = requests.get('https://randomfox.ca/floof/')
    if req.status_code == 200:
        r_json = req.json()
        url = r_json['image']
        # url.split("/")[-1]
    return url


# -----------------------------------------------------------------------
def get_dogURL():
    url = ""
    req = requests.get('https://random.dog/woof.json')
    if req.status_code == 200:
        r_json = req.json()
        url = r_json['url']
        # url.split("/")[-1]
    return url

# -----------------------------------------------------------------------
def get_cat():
    cate = requests.get('http://random.cat')
    soup = bs4.BeautifulSoup(cate.text, "lxml")
    image = soup.find("img")
    image1 = image.get("src")
    return image1


# -----------------------------------------------------------------------
def get_ManOrNot(bot, chat_id):

    markup = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton(text="–ü—Ä–æ–≤–µ—Ä–∏—Ç—å", url="https://vc.ru/dev/58543-thispersondoesnotexist-sayt-generator-realistichnyh-lic")
    markup.add(btn1)

    req = requests.get("https://thispersondoesnotexist.com/image", allow_redirects=True)
    if req.status_code == 200:
        img = BytesIO(req.content)
        bot.send_photo(chat_id, photo=img, reply_markup=markup, caption="–≠—Ç–æ—Ç —á–µ–ª–æ–≤–µ–∫ —Ä–µ–∞–ª–µ–Ω?")


# ---------------------------------------------------------------------
def get_randomFilm():
    url = 'https://randomfilm.ru/'
    infoFilm = {}
    req_film = requests.get(url)
    soup = bs4.BeautifulSoup(req_film.text, "html.parser")
    result_find = soup.find('div', align="center", style="width: 100%")
    infoFilm["–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ"] = result_find.find("h2").getText()
    names = infoFilm["–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ"].split(" / ")
    infoFilm["–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ_rus"] = names[0].strip()
    if len(names) > 1:
        infoFilm["–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ_eng"] = names[1].strip()

    images = []
    for img in result_find.findAll('img'):
        images.append(url + img.get('src'))
    infoFilm["–û–±–ª–æ–∂–∫–∞_url"] = images[0]

    details = result_find.findAll('td')
    infoFilm["–ì–æ–¥"] = details[0].contents[1].strip()
    infoFilm["–°—Ç—Ä–∞–Ω–∞"] = details[1].contents[1].strip()
    infoFilm["–ñ–∞–Ω—Ä"] = details[2].contents[1].strip()
    infoFilm["–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å"] = details[3].contents[1].strip()
    infoFilm["–†–µ–∂–∏—Å—Å—ë—Ä"] = details[4].contents[1].strip()
    infoFilm["–ê–∫—Ç—ë—Ä—ã"] = details[5].contents[1].strip()
    infoFilm["–¢—Ä–µ–π–ª–µ—Ä_url"] = url + details[6].contents[0]["href"]
    infoFilm["—Ñ–∏–ª—å–º_url"] = url + details[7].contents[0]["href"]

    return infoFilm
